#include<stdio.h>
#define MAX 5
typedef struct
{
    char data;
    int p;
}pqueue;
int isempty(int *r)
{
    if(*r==-1)
        return 1;
    else
        return 0;
}
int isfull(int *r)
{
    if(*r==MAX-1)
        return 1;
    else
        return 0;
}
void enqueue(char a,int b,int *r,int *f,pqueue pq[])
{
    if(isfull(r))
    {
        printf("STACK IS FULL");
    }
    else
    {
        if(*r==-1)
        *r=*f=0;
    else
        (*r)++;
     printf("ENQUEUED=%c %d",a,b);
     pq[*r].data=a;
     pq[*r].p=b;
    }
}
void dequeue(int *r,int *f,pqueue pq[])
{
    int pos=0;
    char temp;
    if(isempty(r))
    {
        printf("THE STACK IS EMPTY");
    }
    else if(*r==0)
    {
         temp=pq[*r].data;
        *r=*f=-1;
    }
    else
    {
        int min=pq[0].p;
       for(int i=1;i<=*r;i++)
       {
           if(pq[i].p<min)
           {
               min=pq[i].p;
               pos=i;
           }
       }
        temp=pq[pos].data;
       for(int i=pos;i<*r;i++)
       {
           pq[i].p=pq[i+1].p;
           pq[i].data=pq[i+1].data;
       }
       (*r)--;
    }
 printf("%c",temp);
}
void display(int *r,int *f,pqueue pq[]) {
    if (isempty(r))
        {
        printf("Queue is Empty\n");
        }
    else
        {
            for(int i=*f;i<=*r;i++)
            {
                printf("%c",pq[i].data);
            }
        }
}
int main()
{
    int r=-1,f=-1;
    pqueue pq[MAX];
    int choice=0;
    int b;
    char a;
    while(choice!=4)
    {
        printf(" \n    MAIN MENU      ");
        printf(" \n    1.ENQUEUE      ");
        printf(" \n    2.DEQUEUE      ");
        printf(" \n    3.DISPLAY      ");
        printf(" \n    4.EXIT         ");
        printf("\n");
        printf("enter ur choice=");
        scanf("%d",&choice);
        switch(choice)
        {
        case 1:
            printf("ENTER THE CHAR=");
             scanf(" %c",&a);
            printf("\n ENTER PRIORITY=");
             scanf("%d",&b);
             enqueue(a,b,&r,&f,pq);
            break;
        case 2:
                dequeue(&r,&f,pq);
            break;
        case 3:
           display(&r,&f,pq);
            break;

        case 4:
            printf("THANKYOU.....");
            break;
        default:
            printf("INVALID CHOICE");
        }
    }
return 0;
}