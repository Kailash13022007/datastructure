#include<stdio.h>
#include<ctype.h>
#include<math.h>
#include<string.h>
#define MAX 100
void push(int stack[],int*top,int val)
{
 if(*top==MAX-1)
 printf("overflow\n");
 else
 stack[++(*top)]=val;
 }
int pop(int stack[],int *top)
{
 if(*top==-1)
 printf("underflow\n");
 else
 return stack[(*top)--];
 }
int evaluateprefix(char*exp)
{
int stack[MAX];
int top=-1;
int i;
int result;
for(i=strlen(exp)-1;i>=0;i--)
{
if(isdigit(exp[i]))
{
push(stack,&top,exp[i]-'0');
}
else
{
int op2=pop(stack,&top);
int op1=pop(stack,&top);
switch(exp[i])
{
case'+':
result=op1+op2;
break;
case '-':
result=op1-op2;
break;
case'*':
result=op1*op2;
break;
case'/':
result=op1/op2;
break;
case'^':
case'$':
result=pow(op1,op2);
break;
default:
printf("error:invalid operator%c\n",exp[i]);
return 0;
}
push(stack,&top,result);
}
}
return pop(stack,&top);
}
int main()
{
char prefixexp[MAX];
printf("enter a prefix expression:");
scanf("%s",prefixexp);
int result=evaluateprefix(prefixexp);
printf("result:%d\n",result);
return 0;
}